{"remainingRequest":"C:\\Users\\skool\\Documents\\GitHub\\tensorflowjs\\node_modules\\babel-loader\\lib\\index.js??ref--9-1!C:\\Users\\skool\\Documents\\GitHub\\tensorflowjs\\node_modules\\@docusaurus\\mdx-loader\\src\\index.js??ref--9-2!C:\\Users\\skool\\Documents\\GitHub\\tensorflowjs\\node_modules\\@docusaurus\\plugin-content-blog\\lib\\markdownLoader.js??ref--9-3!C:\\Users\\skool\\Documents\\GitHub\\tensorflowjs\\blog\\2020-05-26-thrid-day.md","dependencies":[{"path":"C:\\Users\\skool\\Documents\\GitHub\\tensorflowjs\\blog\\2020-05-26-thrid-day.md","mtime":1590552021488},{"path":"C:\\Users\\skool\\Documents\\GitHub\\tensorflowjs\\.docusaurus\\docusaurus-plugin-content-blog\\site-blog-2020-05-26-thrid-day-md-923.json","mtime":1590584742214},{"path":"C:\\Users\\skool\\Documents\\GitHub\\tensorflowjs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\skool\\Documents\\GitHub\\tensorflowjs\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\skool\\Documents\\GitHub\\tensorflowjs\\node_modules\\@docusaurus\\mdx-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\skool\\Documents\\GitHub\\tensorflowjs\\node_modules\\@docusaurus\\plugin-content-blog\\lib\\markdownLoader.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iQzovVXNlcnMvc2tvb2wvRG9jdW1lbnRzL0dpdEh1Yi90ZW5zb3JmbG93anMvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMiO2ltcG9ydCBSZWFjdCBmcm9tJ3JlYWN0JztpbXBvcnR7bWR4fWZyb20nQG1keC1qcy9yZWFjdCc7ZXhwb3J0IGNvbnN0IGZyb250TWF0dGVyPXt0aXRsZTonVHJhbnNmZXIgbGVhcm5pbmcgd2l0aCBmZWF0dXJlIGV4dHJhY3RvcicsYXV0aG9yOidTaGFoIE5hZmlzIFJhZmlxdWUnLHRhZ3M6WydtbDUnXX07ZXhwb3J0IGNvbnN0IG1ldGFkYXRhPXsicGVybWFsaW5rIjoiL2Jsb2cvMjAyMC8wNS8yNi90aHJpZC1kYXkiLCJlZGl0VXJsIjoiaHR0cHM6Ly9naXRodWIuY29tL1NoYWhOYWZpcy90ZW5zb3JmbG93anMvZWRpdC9tYXN0ZXIvYmxvZy8yMDIwLTA1LTI2LXRocmlkLWRheS5tZCIsInNvdXJjZSI6IkBzaXRlL2Jsb2dcXDIwMjAtMDUtMjYtdGhyaWQtZGF5Lm1kIiwiZGVzY3JpcHRpb24iOiJCYXNpY2x5IGdldHRpbmcgYSBwcmV0cmFpbmVkIG1vZGVsIHRvIGxlYXJuIG5ldyB0aGluZ3MuIiwiZGF0ZSI6IjIwMjAtMDUtMjZUMDA6MDA6MDAuMDAwWiIsInRhZ3MiOlt7ImxhYmVsIjoibWw1IiwicGVybWFsaW5rIjoiL2Jsb2cvdGFncy9tbC01In1dLCJ0aXRsZSI6IlRyYW5zZmVyIGxlYXJuaW5nIHdpdGggZmVhdHVyZSBleHRyYWN0b3IiLCJyZWFkaW5nVGltZSI6MC41MjUsInRydW5jYXRlZCI6dHJ1ZSwicHJldkl0ZW0iOnsidGl0bGUiOiJGZWF0dXJlIEV4dHJhY3RpbmciLCJwZXJtYWxpbmsiOiIvYmxvZy8yMDIwLzA1LzI3L2ZlYXR1cmUtZXh0cmF0aW9uIn0sIm5leHRJdGVtIjp7InRpdGxlIjoiUnVubmluZyBhIHByZXRyYWluZWQgaW1hZ2UgbW9kZWwiLCJwZXJtYWxpbmsiOiIvYmxvZy8yMDIwLzA1LzE2L3NlY29uZC1kYXkifX07LyogQGpzeCBtZHggKi9leHBvcnQgY29uc3QgcmlnaHRUb2M9W107Y29uc3QgbWFrZVNob3J0Y29kZT1uYW1lPT5mdW5jdGlvbiBNRFhEZWZhdWx0U2hvcnRjb2RlKHByb3BzKXtjb25zb2xlLndhcm4oIkNvbXBvbmVudCAiK25hbWUrIiB3YXMgbm90IGltcG9ydGVkLCBleHBvcnRlZCwgb3IgcHJvdmlkZWQgYnkgTURYUHJvdmlkZXIgYXMgZ2xvYmFsIHNjb3BlIik7cmV0dXJuIG1keCgiZGl2Iixwcm9wcyk7fTtjb25zdCBsYXlvdXRQcm9wcz17cmlnaHRUb2N9O2NvbnN0IE1EWExheW91dD0id3JhcHBlciI7ZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTURYQ29udGVudCh7Y29tcG9uZW50cywuLi5wcm9wc30pe3JldHVybiBtZHgoTURYTGF5b3V0LF9leHRlbmRzKHt9LGxheW91dFByb3BzLHByb3BzLHtjb21wb25lbnRzOmNvbXBvbmVudHMsbWR4VHlwZToiTURYTGF5b3V0In0pLG1keCgicCIsbnVsbCxgQmFzaWNseSBnZXR0aW5nIGEgcHJldHJhaW5lZCBtb2RlbCB0byBsZWFybiBuZXcgdGhpbmdzLmApLG1keCgicCIsbnVsbCxtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiaHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1rUnBaNU9xVVk2WSZsaXN0PVBMUnF3WC1WN1V1NllQU3dUMDZ5X0FFWVRxSXdiZWFtM3kmaW5kZXg9NSJ9KSxgVmlkZW9gKSxgIHRoYXQgSSBmb2xsb3dlZC5gKSxtZHgoInAiLG51bGwsYFRoZXJlcyBhIHNpdGUgY2FsbGVkYCxtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiaHR0cHM6Ly90ZWFjaGFibGVtYWNoaW5lLndpdGhnb29nbGUuY29tLyJ9KSxgVGVhY2hhYmxlCk1hY2hpbmVgKSxgIHdoaWNoIGlzIG1hZGUgYnkgYSBidW5jaCBvZgpwZW9wbGUgYXQgZ29vZ2xlLiBBbGxvdyB5b3UgdG8gdHJhaW5pbmcgdGhlaXIgZXhpc3RpbmcgbW9kZWwgd2l0aCBpbWFnZXMgb2YgeW91cgpvd24uIEkgdHJhaW5lZCBvbiB0d28gaW1hZ2VzLmApLG1keCgicCIsbnVsbCxgQ2xhc3MgMSAtIDMzMiBzYW1wbGVzCmAsbWR4KCJpbWciLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJzcmMiOiIvaW1nL3R1dG9yaWFsL3RyYW5zZmVyX2xlYXJuaW5nL2NsYXNzMS5qcGciLCJhbHQiOiJjbGFzczEifSkpKSxtZHgoInAiLG51bGwsYENsYXNzIDIgLSAyNzIgc2FtcGxlcwpgLG1keCgiaW1nIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsic3JjIjoiL2ltZy90dXRvcmlhbC90cmFuc2Zlcl9sZWFybmluZy9jbGFzczIuanBnIiwiYWx0IjoiY2xhc3MyIn0pKSksbWR4KCJwIixudWxsLGBJIGV4cG9ydGVkIHRoZSBtb2RlbCwgc2V0IHVwIGEgbm9kZSBzZXJ2ZXIgYCxtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiaHR0cHM6Ly9naXRodWIuY29tL1NoYWhOYWZpcy90ZW5zb3JmbG93anMvdHJlZS9tYXN0ZXIvX3NyYy90dXRvcmlhbC9UcmFuc2Zlcl9MZWFybmluZy9leHBvcnRlZF9tb2RlbCJ9KSxgaGVyZWApLGAgdG8gcnVuIHRoZSBwNS5qcyBjb2RlIHRoYXQgdGhlCndlYnNpdGUgZXhwb3J0cyBhbmQgdGhlIGZvbGxvd2luZyB3aGVyZSB0aGUgcmVzdWx0cy4KYCxtZHgoImltZyIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7InNyYyI6Ii9pbWcvdHV0b3JpYWwvdHJhbnNmZXJfbGVhcm5pbmcvcmVzdWx0cy5QTkciLCJhbHQiOiJjbGFzczIifSkpLGAuYCksbWR4KCJwIixudWxsLGBTbyBuZXh0IHRpbWUgSSB3aWxsIHdvcmsgd2l0aCBtbDUncyBmZWF0dXJlIGV4dHJhY3RvciB0byB0cmFpbiBpbWFnZXMgbXkgc2VsZiByYXRoZXIgdGhlbiB1c2luZyBzb21lIG90aGVyIHRvb2wuYCkpO307TURYQ29udGVudC5pc01EWENvbXBvbmVudD10cnVlOw=="},{"version":3,"sources":["C:/Users/skool/Documents/GitHub/tensorflowjs/blog/2020-05-26-thrid-day.md"],"names":["React","mdx","frontMatter","title","author","tags","metadata","rightToc","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"mHACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,eAApB,CAEA,MAAO,MAAMC,CAAAA,WAAW,CAAG,CAC5BC,KAAK,CAAE,0CADqB,CAE5BC,MAAM,CAAE,oBAFoB,CAG5BC,IAAI,CAAE,CACL,KADK,CAHsB,CAApB,CAOT,MAAO,MAAMC,CAAAA,QAAQ,CAAG,CACtB,YAAa,4BADS,CAEtB,UAAW,oFAFW,CAGtB,SAAU,qCAHY,CAItB,cAAe,yDAJO,CAKtB,OAAQ,0BALc,CAMtB,OAAQ,CACN,CACE,QAAS,KADX,CAEE,YAAa,iBAFf,CADM,CANc,CAYtB,QAAS,0CAZa,CAatB,cAAe,KAbO,CActB,YAAa,IAdS,CAetB,WAAY,CACV,QAAS,oBADC,CAEV,YAAa,oCAFH,CAfU,CAmBtB,WAAY,CACV,QAAS,kCADC,CAEV,YAAa,6BAFH,CAnBU,CAAjB,CAwBL,cAEF,MAAO,MAAMC,CAAAA,QAAQ,CAAG,EAAjB,CACP,KAAMC,CAAAA,aAAa,CAAGC,IAAI,EAAI,QAASC,CAAAA,mBAAT,CAA6BC,KAA7B,CAAoC,CAChEC,OAAO,CAACC,IAAR,CAAa,aAAeJ,IAAf,CAAsB,yEAAnC,EACA,MAAO,WAASE,KAAT,CAAP,CACD,CAHD,CAKA,KAAMG,CAAAA,WAAW,CAAG,CAClBP,QADkB,CAApB,CAGA,KAAMQ,CAAAA,SAAS,CAAG,SAAlB,CACA,cAAe,SAASC,CAAAA,UAAT,CAAoB,CACjCC,UADiC,CAEjC,GAAGN,KAF8B,CAApB,CAGZ,CACD,MAAO,KAAC,SAAD,aAAeG,WAAf,CAAgCH,KAAhC,EAAuC,UAAU,CAAEM,UAAnD,CAA+D,OAAO,CAAC,WAAvE,GAEL,aAAK,yDAAL,CAFK,CAML,aAAG,kBAAG,UAAU,CAAC,GAAd,EAAsB,CACrB,OAAQ,6FADa,CAAtB,EAEI,OAFJ,CAAH,CAEoB,mBAFpB,CANK,CASL,aAAK,sBAAL,CAA2B,kBAAG,UAAU,CAAC,GAAd,EAAsB,CAC7C,OAAQ,0CADqC,CAAtB,EAEpB;QAFoB,CAA3B,CAGW;;8BAHX,CATK,CAeL,aAAK;CAAL,CACF,oBAAK,UAAU,CAAC,GAAhB,EAAwB,CAClB,MAAO,4CADW,CAElB,MAAO,QAFW,CAAxB,EADE,CAfK,CAoBL,aAAK;CAAL,CACF,oBAAK,UAAU,CAAC,GAAhB,EAAwB,CAClB,MAAO,4CADW,CAElB,MAAO,QAFW,CAAxB,EADE,CApBK,CAyBL,aAAK,6CAAL,CAAkD,kBAAG,UAAU,CAAC,GAAd,EAAsB,CACpE,OAAQ,sGAD4D,CAAtB,EAE3C,MAF2C,CAAlD,CAEmB;;CAFnB,CAIF,oBAAK,UAAU,CAAC,GAAhB,EAAwB,CAClB,MAAO,6CADW,CAElB,MAAO,QAFW,CAAxB,EAJE,CAOa,GAPb,CAzBK,CAiCL,aAAK,kHAAL,CAjCK,CAAP,CAmCD,CAED,CACAD,UAAU,CAACE,cAAX,CAA4B,IAA5B","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\ttitle: 'Transfer learning with feature extractor',\n\tauthor: 'Shah Nafis Rafique',\n\ttags: [\n\t\t'ml5'\n\t]\n};\nexport const metadata = {\n  \"permalink\": \"/blog/2020/05/26/thrid-day\",\n  \"editUrl\": \"https://github.com/ShahNafis/tensorflowjs/edit/master/blog/2020-05-26-thrid-day.md\",\n  \"source\": \"@site/blog\\\\2020-05-26-thrid-day.md\",\n  \"description\": \"Basicly getting a pretrained model to learn new things.\",\n  \"date\": \"2020-05-26T00:00:00.000Z\",\n  \"tags\": [\n    {\n      \"label\": \"ml5\",\n      \"permalink\": \"/blog/tags/ml-5\"\n    }\n  ],\n  \"title\": \"Transfer learning with feature extractor\",\n  \"readingTime\": 0.525,\n  \"truncated\": true,\n  \"prevItem\": {\n    \"title\": \"Feature Extracting\",\n    \"permalink\": \"/blog/2020/05/27/feature-extration\"\n  },\n  \"nextItem\": {\n    \"title\": \"Running a pretrained image model\",\n    \"permalink\": \"/blog/2020/05/16/second-day\"\n  }\n};\n  /* @jsx mdx */\n\nexport const rightToc = [];\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  rightToc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <p>{`Basicly getting a pretrained model to learn new things.`}</p>\n    {\n      /*truncate*/\n    }\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://www.youtube.com/watch?v=kRpZ5OqUY6Y&list=PLRqwX-V7Uu6YPSwT06y_AEYTqIwbeam3y&index=5\"\n      }}>{`Video`}</a>{` that I followed.`}</p>\n    <p>{`Theres a site called`}<a parentName=\"p\" {...{\n        \"href\": \"https://teachablemachine.withgoogle.com/\"\n      }}>{`Teachable\nMachine`}</a>{` which is made by a bunch of\npeople at google. Allow you to training their existing model with images of your\nown. I trained on two images.`}</p>\n    <p>{`Class 1 - 332 samples\n`}<img parentName=\"p\" {...{\n        \"src\": \"/img/tutorial/transfer_learning/class1.jpg\",\n        \"alt\": \"class1\"\n      }}></img></p>\n    <p>{`Class 2 - 272 samples\n`}<img parentName=\"p\" {...{\n        \"src\": \"/img/tutorial/transfer_learning/class2.jpg\",\n        \"alt\": \"class2\"\n      }}></img></p>\n    <p>{`I exported the model, set up a node server `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/ShahNafis/tensorflowjs/tree/master/_src/tutorial/Transfer_Learning/exported_model\"\n      }}>{`here`}</a>{` to run the p5.js code that the\nwebsite exports and the following where the results.\n`}<img parentName=\"p\" {...{\n        \"src\": \"/img/tutorial/transfer_learning/results.PNG\",\n        \"alt\": \"class2\"\n      }}></img>{`.`}</p>\n    <p>{`So next time I will work with ml5's feature extractor to train images my self rather then using some other tool.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}