{"remainingRequest":"C:\\Users\\skool\\Documents\\GitHub\\tensorflowjs\\node_modules\\babel-loader\\lib\\index.js??ref--9-1!C:\\Users\\skool\\Documents\\GitHub\\tensorflowjs\\node_modules\\@docusaurus\\mdx-loader\\src\\index.js??ref--9-2!C:\\Users\\skool\\Documents\\GitHub\\tensorflowjs\\node_modules\\@docusaurus\\plugin-content-blog\\lib\\markdownLoader.js??ref--9-3!C:\\Users\\skool\\Documents\\GitHub\\tensorflowjs\\blog\\2020-05-16-second-day.md","dependencies":[{"path":"C:\\Users\\skool\\Documents\\GitHub\\tensorflowjs\\blog\\2020-05-16-second-day.md","mtime":1590550216003},{"path":"C:\\Users\\skool\\Documents\\GitHub\\tensorflowjs\\.docusaurus\\docusaurus-plugin-content-blog\\site-blog-2020-05-16-second-day-md-bd3.json","mtime":1590550255272},{"path":"C:\\Users\\skool\\Documents\\GitHub\\tensorflowjs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\skool\\Documents\\GitHub\\tensorflowjs\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\skool\\Documents\\GitHub\\tensorflowjs\\node_modules\\@docusaurus\\mdx-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\skool\\Documents\\GitHub\\tensorflowjs\\node_modules\\@docusaurus\\plugin-content-blog\\lib\\markdownLoader.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iQzovVXNlcnMvc2tvb2wvRG9jdW1lbnRzL0dpdEh1Yi90ZW5zb3JmbG93anMvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMiO2ltcG9ydCBSZWFjdCBmcm9tJ3JlYWN0JztpbXBvcnR7bWR4fWZyb20nQG1keC1qcy9yZWFjdCc7ZXhwb3J0IGNvbnN0IGZyb250TWF0dGVyPXt0aXRsZTonUnVubmluZyBhIHByZXRyYWluZWQgaW1hZ2UgbW9kZWwnLGF1dGhvcjonU2hhaCBOYWZpcyBSYWZpcXVlJyx0YWdzOlsnbWw1J119O2V4cG9ydCBjb25zdCBtZXRhZGF0YT17InBlcm1hbGluayI6Ii9ibG9nLzIwMjAvMDUvMTYvc2Vjb25kLWRheSIsImVkaXRVcmwiOiJodHRwczovL2dpdGh1Yi5jb20vU2hhaE5hZmlzL3RlbnNvcmZsb3dqcy9lZGl0L21hc3Rlci9ibG9nLzIwMjAtMDUtMTYtc2Vjb25kLWRheS5tZCIsInNvdXJjZSI6IkBzaXRlL2Jsb2dcXDIwMjAtMDUtMTYtc2Vjb25kLWRheS5tZCIsImRlc2NyaXB0aW9uIjoiU2Vjb25kIGRheSB0cnlpbmcgdG8gdXNlIFRlbnNvckZsb3cuanMvbWw1LmpzIHdoZXJlIEkgcnVuIGEgcHJldHJhaW5lZCBpbWFnZSIsImRhdGUiOiIyMDIwLTA1LTE2VDAwOjAwOjAwLjAwMFoiLCJ0YWdzIjpbeyJsYWJlbCI6Im1sNSIsInBlcm1hbGluayI6Ii9ibG9nL3RhZ3MvbWwtNSJ9XSwidGl0bGUiOiJSdW5uaW5nIGEgcHJldHJhaW5lZCBpbWFnZSBtb2RlbCIsInJlYWRpbmdUaW1lIjoxLjA0LCJ0cnVuY2F0ZWQiOnRydWUsInByZXZJdGVtIjp7InRpdGxlIjoiVHJhbnNmZXIgbGVhcm5pbmcgd2l0aCBmZWF0dXJlIGV4dHJhY3RvciIsInBlcm1hbGluayI6Ii9ibG9nLzIwMjAvMDUvMjYvdGhyaWQtZGF5In0sIm5leHRJdGVtIjp7InRpdGxlIjoiSW50cm9kdWN0aW9uIiwicGVybWFsaW5rIjoiL2Jsb2cvMjAyMC8wNS8xNS9maXJzdC1kYXkifX07LyogQGpzeCBtZHggKi9leHBvcnQgY29uc3QgcmlnaHRUb2M9W107Y29uc3QgbWFrZVNob3J0Y29kZT1uYW1lPT5mdW5jdGlvbiBNRFhEZWZhdWx0U2hvcnRjb2RlKHByb3BzKXtjb25zb2xlLndhcm4oIkNvbXBvbmVudCAiK25hbWUrIiB3YXMgbm90IGltcG9ydGVkLCBleHBvcnRlZCwgb3IgcHJvdmlkZWQgYnkgTURYUHJvdmlkZXIgYXMgZ2xvYmFsIHNjb3BlIik7cmV0dXJuIG1keCgiZGl2Iixwcm9wcyk7fTtjb25zdCBsYXlvdXRQcm9wcz17cmlnaHRUb2N9O2NvbnN0IE1EWExheW91dD0id3JhcHBlciI7ZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTURYQ29udGVudCh7Y29tcG9uZW50cywuLi5wcm9wc30pe3JldHVybiBtZHgoTURYTGF5b3V0LF9leHRlbmRzKHt9LGxheW91dFByb3BzLHByb3BzLHtjb21wb25lbnRzOmNvbXBvbmVudHMsbWR4VHlwZToiTURYTGF5b3V0In0pLG1keCgicCIsbnVsbCxgU2Vjb25kIGRheSB0cnlpbmcgdG8gdXNlIFRlbnNvckZsb3cuanMvbWw1LmpzIHdoZXJlIEkgcnVuIGEgcHJldHJhaW5lZCBpbWFnZQptb2RlbCBvbiBzb21lIHRlc3QgaW1hZ2VzLmApLG1keCgicCIsbnVsbCxgVGhlIG5leHQgdmlkZW8gSSB3YXRjaCB3YXMKYCxtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiaHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj15TmtBdVd6NWxuWSZsaXN0PVBMUnF3WC1WN1V1NllQU3dUMDZ5X0FFWVRxSXdiZWFtM3kifSksYGhlcmVgKSxgLgpTbyBvbmUgdGhpbmcgdG8ga25vdyBhYm91dCBhIHByZXRyYWluZWQgbW9kZWwgaXMgIldoYXQgaXMgdGhlIG1vZGVsIHRyYWluZWQgb24iLgpGb3IgZXhhbXBsZSBpZiBhIG1vZGVsIHdhcyBvbmx5IHRyYWluZ2VkIHRvIHJlY29nbml6ZSB0aGUgY29sb3JzIHJlZCBvciBibHVlCnRoZW4gZ2l2aW5nIGl0IHRoZSBjb2xvciBncmVlbiBtaWdodCBub3QgZ28gc28gd2VsbCBmb3IgaXQgc2luY2UgaXQgaGFzIG5vdCBiZWVuCnRyYWluZWQgb24gZ3JlZW4uIFRoZSBleGFtcGxlIGZvciB0aGUgdmlkZW8gY2FuIGJlIGZvdW5kCmAsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsiaHJlZiI6Imh0dHBzOi8vZ2l0aHViLmNvbS9tbDVqcy9tbDUtbGlicmFyeS9ibG9iL2E3ZWY3NTQwOGQzNWU5ZGQxYjg5ZjNkNGJjYjM2NzgzY2I5NjY1OTAvc3JjL3V0aWxzL0lNQUdFTkVUX0NMQVNTRVMuanMifSksYGhlcmVgKSxgCnNob3cgYWxsIHRoZSBjbGFzc2VzIHRoYXQgdGhlIGltYWdlbmV0IGtub3dzLmApLG1keCgicCIsbnVsbCxgU28gdGltZSBmb3IgYWN0dWFsIGNvZGluZy4gSSBnb3QgdGhlIHN0YXJ0aW5nIGNvZGUgZnJvbQpgLG1keCgiYSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7ImhyZWYiOiJodHRwczovL2dpdGh1Yi5jb20vQ29kaW5nVHJhaW4vd2Vic2l0ZS90cmVlL21hc3Rlci9sZWFybmluZy9tbDUvMS4xX2ltYWdlX2NsYXNzaWZpY2F0aW9uL1A1In0pLGBoZXJlYCksYC4KSSBqdXN0IGZvbGxvd2VkIHRoZSB2aWRlbyB0byBydW4gdGhlIHByZXRyYWluZWQgbW9kZWwsIHRoaXMgaXMgd2hhdCBteSBjb2RlCmxvb2tzIGxpa2UKYCxtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiaHR0cHM6Ly9naXRodWIuY29tL1NoYWhOYWZpcy90ZW5zb3JmbG93anMvdHJlZS9tYXN0ZXIvX3NyYy90dXRvcmlhbC9JbWFnZV9DbGFzc2lmaWNhdGlvbl93aXRoX01vYmlsZU5ldCJ9KSxgaGVyZWApKSxtZHgoInAiLG51bGwsYE15IHJlc3VsdHMgd2hlcmUgYXMgZm9sbG93c2ApLG1keCgicCIsbnVsbCxtZHgoImltZyIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7InNyYyI6Ii9pbWcvdHV0b3JpYWwvcHJldHJhaW5lZF9pbWFnZV9tb2RlbC90cnkxLlBORyIsImFsdCI6InRyeTEifSkpLGAKYCxtZHgoImltZyIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7InNyYyI6Ii9pbWcvdHV0b3JpYWwvcHJldHJhaW5lZF9pbWFnZV9tb2RlbC90cnkyLlBORyIsImFsdCI6InRyeTIifSkpLGAKYCxtZHgoImltZyIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7InNyYyI6Ii9pbWcvdHV0b3JpYWwvcHJldHJhaW5lZF9pbWFnZV9tb2RlbC90cnkzLlBORyIsImFsdCI6InRyeTMifSkpLGAKYCxtZHgoImltZyIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7InNyYyI6Ii9pbWcvdHV0b3JpYWwvcHJldHJhaW5lZF9pbWFnZV9tb2RlbC90cnk0LlBORyIsImFsdCI6InRyeTQifSkpLGAKYCxtZHgoImltZyIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7InNyYyI6Ii9pbWcvdHV0b3JpYWwvcHJldHJhaW5lZF9pbWFnZV9tb2RlbC90cnk1LlBORyIsImFsdCI6InRyeTUifSkpLGAKYCxtZHgoImltZyIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7InNyYyI6Ii9pbWcvdHV0b3JpYWwvcHJldHJhaW5lZF9pbWFnZV9tb2RlbC90cnk2LlBORyIsImFsdCI6InRyeTYifSkpLGAKYCxtZHgoImltZyIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InAifSx7InNyYyI6Ii9pbWcvdHV0b3JpYWwvcHJldHJhaW5lZF9pbWFnZV9tb2RlbC90cnk3LlBORyIsImFsdCI6InRyeTcifSkpKSxtZHgoInAiLG51bGwsYFRoaXMgaXMgbm90IGFsbCBvZiB0aGUgaW1hZ2VzIEkgaGFkLCBqdXN0IGEgZmV3IG9mIHRoZW0uIFNvbWUgaW1hZ2VzIHdoZXJlCnByZWRpY3RlZCBjb3JyZWN0bHkgYW5kIHNvbWUgd2hlcmUgbm90ICh0aGUgZHJhZ29uIGFuZCBtYW1tb3RoIHdoZXJlIHdheSBvZmYgYXMKZXhwZWN0ZWQpLmApLG1keCgicCIsbnVsbCxgVGhlIGhhcmQgcGFydCBvZiB0aGlzIHdhc250IGFjdHVhbGx5IGdldHRpbmcgbWw1IHRvIHdvcmsgYnV0IHJhdGhlciBoYXZpbmcgYQp3ZWJzZXJ2ZXIgdG8gaG9zdCB0aGUgaHRtbCBwYWdlKEkgcmVhbGx5IGRpc2xpa2UganVzdCB2YW5pbGxhIG5vZGUuanMgZm9yCnNlcnZpbmcgaHRtbCBwYWdlcywgSSB0aGluayBJIHdpbGwgbWFrZSBhIGV4cHJlc3MgdmVyc2lvbiDwn5iCICkuYCkpO307TURYQ29udGVudC5pc01EWENvbXBvbmVudD10cnVlOw=="},{"version":3,"sources":["C:/Users/skool/Documents/GitHub/tensorflowjs/blog/2020-05-16-second-day.md"],"names":["React","mdx","frontMatter","title","author","tags","metadata","rightToc","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\ttitle: 'Running a pretrained image model',\n\tauthor: 'Shah Nafis Rafique',\n\ttags: [\n\t\t'ml5'\n\t]\n};\nexport const metadata = {\n  \"permalink\": \"/blog/2020/05/16/second-day\",\n  \"editUrl\": \"https://github.com/ShahNafis/tensorflowjs/edit/master/blog/2020-05-16-second-day.md\",\n  \"source\": \"@site/blog\\\\2020-05-16-second-day.md\",\n  \"description\": \"Second day trying to use TensorFlow.js/ml5.js where I run a pretrained image\",\n  \"date\": \"2020-05-16T00:00:00.000Z\",\n  \"tags\": [\n    {\n      \"label\": \"ml5\",\n      \"permalink\": \"/blog/tags/ml-5\"\n    }\n  ],\n  \"title\": \"Running a pretrained image model\",\n  \"readingTime\": 1.04,\n  \"truncated\": true,\n  \"prevItem\": {\n    \"title\": \"Transfer learning with feature extractor\",\n    \"permalink\": \"/blog/2020/05/26/thrid-day\"\n  },\n  \"nextItem\": {\n    \"title\": \"Introduction\",\n    \"permalink\": \"/blog/2020/05/15/first-day\"\n  }\n};\n  /* @jsx mdx */\n\nexport const rightToc = [];\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  rightToc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <p>{`Second day trying to use TensorFlow.js/ml5.js where I run a pretrained image\nmodel on some test images.`}</p>\n    {\n      /*truncate*/\n    }\n    <p>{`The next video I watch was\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://www.youtube.com/watch?v=yNkAuWz5lnY&list=PLRqwX-V7Uu6YPSwT06y_AEYTqIwbeam3y\"\n      }}>{`here`}</a>{`.\nSo one thing to know about a pretrained model is \"What is the model trained on\".\nFor example if a model was only trainged to recognize the colors red or blue\nthen giving it the color green might not go so well for it since it has not been\ntrained on green. The example for the video can be found\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/ml5js/ml5-library/blob/a7ef75408d35e9dd1b89f3d4bcb36783cb966590/src/utils/IMAGENET_CLASSES.js\"\n      }}>{`here`}</a>{`\nshow all the classes that the imagenet knows.`}</p>\n    <p>{`So time for actual coding. I got the starting code from\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/CodingTrain/website/tree/master/learning/ml5/1.1_image_classification/P5\"\n      }}>{`here`}</a>{`.\nI just followed the video to run the pretrained model, this is what my code\nlooks like\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/ShahNafis/tensorflowjs/tree/master/_src/tutorial/Image_Classification_with_MobileNet\"\n      }}>{`here`}</a></p>\n    <p>{`My results where as follows`}</p>\n    <p><img parentName=\"p\" {...{\n        \"src\": \"/img/tutorial/pretrained_image_model/try1.PNG\",\n        \"alt\": \"try1\"\n      }}></img>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"/img/tutorial/pretrained_image_model/try2.PNG\",\n        \"alt\": \"try2\"\n      }}></img>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"/img/tutorial/pretrained_image_model/try3.PNG\",\n        \"alt\": \"try3\"\n      }}></img>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"/img/tutorial/pretrained_image_model/try4.PNG\",\n        \"alt\": \"try4\"\n      }}></img>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"/img/tutorial/pretrained_image_model/try5.PNG\",\n        \"alt\": \"try5\"\n      }}></img>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"/img/tutorial/pretrained_image_model/try6.PNG\",\n        \"alt\": \"try6\"\n      }}></img>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"/img/tutorial/pretrained_image_model/try7.PNG\",\n        \"alt\": \"try7\"\n      }}></img></p>\n    <p>{`This is not all of the images I had, just a few of them. Some images where\npredicted correctly and some where not (the dragon and mammoth where way off as\nexpected).`}</p>\n    <p>{`The hard part of this wasnt actually getting ml5 to work but rather having a\nwebserver to host the html page(I really dislike just vanilla node.js for\nserving html pages, I think I will make a express version 😂 ).`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}